1 - Implementation (Python / Flask)

from flask import jsonify
from datetime import datetime, timedelta

@app.route('/api/companies/<int:company_id>/alerts/low-stock', methods=['GET'])
def low_stock_alerts(company_id):
    alerts = []
    thirty_days_ago = datetime.utcnow() - timedelta(days=30)

    # Get all warehouses for the company
    warehouses = Warehouse.query.filter_by(company_id=company_id).all()

    for warehouse in warehouses:
        inventory_records = Inventory.query.filter_by(warehouse_id=warehouse.id).all()

        for inv in inventory_records:
            product = Product.query.get(inv.product_id)

            # Skip if no sales in last 30 days
            recent_sales = SalesActivity.query.filter(
                SalesActivity.product_id == product.id,
                SalesActivity.warehouse_id == warehouse.id,
                SalesActivity.sale_date >= thirty_days_ago
            ).all()

            if not recent_sales:
                continue

            # Check low stock condition
            if inv.quantity < product.low_stock_threshold:
                total_sold = sum(s.quantity for s in recent_sales)
                days_until_stockout = (inv.quantity / (total_sold / 30)) if total_sold else None

                # Get first supplier
                supplier_link = ProductSupplier.query.filter_by(product_id=product.id).first()
                supplier = Supplier.query.get(supplier_link.supplier_id) if supplier_link else None

                alerts.append({
                    "product_id": product.id,
                    "product_name": product.name,
                    "sku": product.sku,
                    "warehouse_id": warehouse.id,
                    "warehouse_name": warehouse.name,
                    "current_stock": inv.quantity,
                    "threshold": product.low_stock_threshold,
                    "days_until_stockout": round(days_until_stockout, 2) if days_until_stockout else "N/A",
                    "supplier": {
                        "id": supplier.id,
                        "name": supplier.name,
                        "contact_email": supplier.contact_email
                    } if supplier else None
                })

    return jsonify({
        "alerts": alerts,
        "total_alerts": len(alerts)
    }), 200

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


2 - Assumptions

Threshold is stored in a field low_stock_threshold in the products table.
Recent sales = sales in the last 30 days.
Each product can have multiple suppliers (we return the first or preferred).
Supplier info is mapped via product_suppliers.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3 - Edge Cases Handled

No recent sales → Skip product
Division by zero → Handled if no sales
Missing supplier → Supplier field set to null
Multiple warehouses → Checked per warehouse
